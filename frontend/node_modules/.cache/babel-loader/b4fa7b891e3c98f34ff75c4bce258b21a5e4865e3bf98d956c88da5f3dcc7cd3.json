{"ast":null,"code":"import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const pdf=flag=>{if(flag===0){fetch(\"/result/summary\").then(response=>{response.blob().then(blob=>{let url=window.URL.createObjectURL(blob);let a=document.createElement('a');a.href=url;a.download=\"summary.pdf\";a.click();a.remove();});});}else{fetch(\"/result/transcript\").then(response=>{response.blob().then(blob=>{let url=window.URL.createObjectURL(blob);let a=document.createElement('a');a.href=url;a.download=\"transcript.txt\";a.click();a.remove();});});}};const Result=text=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"text\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Key TimeStamps\"}),/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:text}}),/*#__PURE__*/_jsxs(\"div\",{className:\"button\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{pdf(0);},children:\"Download Summary\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{pdf(1);},children:\"Download Transcript\"})]})]});};export default Result;","map":{"version":3,"names":["pdf","flag","fetch","then","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","remove","Result","text","_jsxs","className","children","_jsx","dangerouslySetInnerHTML","__html","onClick"],"sources":["/home/robo/meeting/frontend/src/result.js"],"sourcesContent":["\n\n\nconst pdf = (flag) => {\n    if(flag === 0){\n        fetch(\"/result/summary\")\n        .then(response => {\n            response.blob().then(blob => {\n                let url = window.URL.createObjectURL(blob);\n                let a = document.createElement('a');\n                a.href = url;\n                a.download = \"summary.pdf\";\n\n                a.click();\n                a.remove();\n            });\n            \n    });\n}\n    else {\n        fetch(\"/result/transcript\")\n        .then(response => {\n            response.blob().then(blob => {\n                let url = window.URL.createObjectURL(blob);\n                let a = document.createElement('a');\n                a.href = url;\n                a.download = \"transcript.txt\";\n\n                a.click();\n                a.remove();\n            });\n            \n    });\n    }\n}\n\nconst Result = (text)=>{ \n    \n    \n      \nreturn (\n    <div className = \"text\">\n    <h1>Key TimeStamps</h1>\n    <div dangerouslySetInnerHTML={{ __html: text }} /> \n    <div className='button'>\n    <button onClick={()=>{pdf(0);}}>Download Summary</button>\n    <button onClick= {()=> {pdf(1);}}>Download Transcript</button>\n    </div>\n    </div>\n    )};\nexport default Result;"],"mappings":"yDAGA,KAAM,CAAAA,GAAG,CAAIC,IAAI,EAAK,CAClB,GAAGA,IAAI,GAAK,CAAC,CAAC,CACVC,KAAK,CAAC,iBAAiB,CAAC,CACvBC,IAAI,CAACC,QAAQ,EAAI,CACdA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACE,IAAI,EAAI,CACzB,GAAI,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAC1C,GAAI,CAAAK,CAAC,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACnCF,CAAC,CAACG,IAAI,CAAGP,GAAG,CACZI,CAAC,CAACI,QAAQ,CAAG,aAAa,CAE1BJ,CAAC,CAACK,KAAK,CAAC,CAAC,CACTL,CAAC,CAACM,MAAM,CAAC,CAAC,CACd,CAAC,CAAC,CAEV,CAAC,CAAC,CACN,CAAC,IACQ,CACDd,KAAK,CAAC,oBAAoB,CAAC,CAC1BC,IAAI,CAACC,QAAQ,EAAI,CACdA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACE,IAAI,EAAI,CACzB,GAAI,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAC1C,GAAI,CAAAK,CAAC,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACnCF,CAAC,CAACG,IAAI,CAAGP,GAAG,CACZI,CAAC,CAACI,QAAQ,CAAG,gBAAgB,CAE7BJ,CAAC,CAACK,KAAK,CAAC,CAAC,CACTL,CAAC,CAACM,MAAM,CAAC,CAAC,CACd,CAAC,CAAC,CAEV,CAAC,CAAC,CACF,CACJ,CAAC,CAED,KAAM,CAAAC,MAAM,CAAIC,IAAI,EAAG,CAIvB,mBACIC,KAAA,QAAKC,SAAS,CAAG,MAAM,CAAAC,QAAA,eACvBC,IAAA,OAAAD,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBC,IAAA,QAAKC,uBAAuB,CAAE,CAAEC,MAAM,CAAEN,IAAK,CAAE,CAAE,CAAC,cAClDC,KAAA,QAAKC,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACvBC,IAAA,WAAQG,OAAO,CAAEA,CAAA,GAAI,CAACzB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,CAAAqB,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACzDC,IAAA,WAAQG,OAAO,CAAGA,CAAA,GAAK,CAACzB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,CAAAqB,QAAA,CAAC,qBAAmB,CAAQ,CAAC,EACzD,CAAC,EACD,CAAC,CACL,CAAC,CACN,cAAe,CAAAJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}