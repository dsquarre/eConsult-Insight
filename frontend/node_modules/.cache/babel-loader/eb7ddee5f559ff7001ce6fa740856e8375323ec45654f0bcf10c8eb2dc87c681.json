{"ast":null,"code":"var _jsxFileName = \"/home/robo/meeting/frontend/src/DragDropFiles.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport './App.css';\nimport Upload from \"./processing\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DragDropFiles = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [upload, setupload] = useState(null);\n  const inputRef = useRef();\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setFiles(event.dataTransfer.files);\n  };\n  const handleClick = async event => {\n    event.preventDefault();\n    setupload(files);\n    const formData = new FormData();\n    formData.append('file', event.target.files[0]);\n    try {\n      const endpoint = \"http://localhost:8000/processing/\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"file uploaded\");\n      } else {\n        console.log(\"file not uploaded\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (files && !upload) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploads\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.from(files).map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: file.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFiles(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);else if (files && upload) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Upload()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !files && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Drag and Drop Files to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: event => setFiles(event.target.files),\n        hidden: true,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => inputRef.current.click(),\n        children: \"Select Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DragDropFiles, \"ShQOFLrSxeSD/XbbBpFwbGZ6uMs=\");\n_c = DragDropFiles;\nexport default DragDropFiles;\nvar _c;\n$RefreshReg$(_c, \"DragDropFiles\");","map":{"version":3,"names":["useRef","useState","Upload","jsxDEV","_jsxDEV","Fragment","_Fragment","DragDropFiles","_s","files","setFiles","upload","setupload","inputRef","handleDragOver","event","preventDefault","handleDrop","dataTransfer","handleClick","formData","FormData","append","target","endpoint","response","fetch","method","body","ok","console","log","error","className","children","Array","from","map","file","idx","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragOver","onDrop","type","onChange","hidden","ref","current","click","_c","$RefreshReg$"],"sources":["/home/robo/meeting/frontend/src/DragDropFiles.js"],"sourcesContent":["import { useRef, useState} from \"react\";\r\nimport './App.css'\r\nimport Upload from \"./processing\";\r\nconst DragDropFiles = () => {\r\n    const [files, setFiles] = useState(null);\r\n    const [upload, setupload] = useState(null);\r\n    const inputRef = useRef();\r\n    const handleDragOver = (event) =>{\r\n        event.preventDefault();\r\n    };\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        setFiles(event.dataTransfer.files)\r\n    };\r\n    const handleClick = async(event) =>{\r\n        event.preventDefault();\r\n        setupload(files);\r\n        const formData = new FormData();\r\n        formData.append('file',event.target.files[0]);\r\n        try {\r\n        const endpoint = \"http://localhost:8000/processing/\"\r\n        const response = await fetch(endpoint,{\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n        if (response.ok){console.log(\"file uploaded\");}\r\n        else {console.log(\"file not uploaded\");}\r\n        }\r\n        catch(error){\r\n        console.log(error);\r\n        }\r\n        };\r\n    \r\n    \r\n\r\n    if (files && !upload) return (\r\n        <div className=\"uploads\">\r\n            <ul>\r\n                {Array.from(files).map((file,idx) => <li key={idx}>{file.name}</li>)}\r\n            </ul>\r\n            <div className=\"actions\">\r\n                <button onClick={() => setFiles(null)}>Cancel</button>\r\n                <button onClick={handleClick }>Upload</button>\r\n            </div>\r\n        </div>\r\n    )\r\n    else if (files && upload) return (\r\n        <div>{Upload() }</div>\r\n        \r\n        )\r\n\r\n    return (\r\n        <>\r\n        {!files &&(\r\n            \r\n\r\n\r\n            <div \r\n                className=\"dropzone\"\r\n                onDragOver={handleDragOver}\r\n                onDrop={handleDrop}\r\n            >\r\n                <h1> Drag and Drop Files to Upload</h1>\r\n                <h1>OR</h1>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange = {(event) => setFiles(event.target.files)}\r\n                    hidden\r\n                    ref={inputRef}\r\n                />\r\n            \r\n                <button onClick={() => inputRef.current.click()}>Select Files</button>\r\n            </div>\r\n          )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DragDropFiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}