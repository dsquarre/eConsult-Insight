{"ast":null,"code":"var _jsxFileName = \"/home/robo/meeting/frontend/src/DragDropFiles.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport './App.css';\nimport Result from \"./processing\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DragDropFiles = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [upload, setupload] = useState(null);\n  const inputRef = useRef();\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setFiles(event.dataTransfer.files[0]);\n  };\n  const handleClick = async event => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waiting\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here is your consise summary of the meeting in pdf format.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", files);\n    try {\n      const endpoint = \"http://localhost:8000/upload/\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        setupload(files);\n        console.log(\"file uploaded\");\n      } else {\n        console.log(\"file not uploaded\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (files && !upload) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploads\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.from(files).map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: file.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFiles(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: !files && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"process\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Please waitt while we summarize your text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), handleClick]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this) && handleClick\n          }, void 0, false);\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);else if (files && upload) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Result()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !files && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Drag and Drop Files to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: event => setFiles(event.target.files[0]),\n        hidden: true,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => inputRef.current.click(),\n        children: \"Select Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DragDropFiles, \"ShQOFLrSxeSD/XbbBpFwbGZ6uMs=\");\n_c = DragDropFiles;\nexport default DragDropFiles;\nvar _c;\n$RefreshReg$(_c, \"DragDropFiles\");","map":{"version":3,"names":["useRef","useState","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","DragDropFiles","_s","files","setFiles","upload","setupload","inputRef","handleDragOver","event","preventDefault","handleDrop","dataTransfer","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formData","FormData","append","endpoint","response","fetch","method","body","ok","console","log","error","Array","from","map","file","idx","name","onClick","onDragOver","onDrop","type","onChange","target","hidden","ref","current","click","_c","$RefreshReg$"],"sources":["/home/robo/meeting/frontend/src/DragDropFiles.js"],"sourcesContent":["import { useRef, useState} from \"react\";\r\nimport './App.css'\r\nimport Result from \"./processing\";\r\nconst DragDropFiles = () => {\r\n    const [files, setFiles] = useState(null);\r\n    const [upload, setupload] = useState(null);\r\n    const inputRef = useRef();\r\n    const handleDragOver = (event) =>{\r\n        event.preventDefault();\r\n    };\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        setFiles(event.dataTransfer.files[0])\r\n    };\r\n    const handleClick = async(event) =>{\r\n        <div className=\"waiting\">\r\n            <h1>Here is your consise summary of the meeting in pdf format.</h1>\r\n    </div>\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"file\",files);\r\n        try {\r\n        const endpoint = \"http://localhost:8000/upload/\"\r\n        const response = await fetch(endpoint,{\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n        if (response.ok){setupload(files); console.log(\"file uploaded\");}\r\n        else {console.log(\"file not uploaded\");}\r\n        }\r\n        catch(error){\r\n        console.log(error);\r\n        }\r\n        };\r\n    \r\n    \r\n\r\n    if (files && !upload) return (\r\n        <div className=\"uploads\">\r\n            <ul>\r\n                {Array.from(files).map((file,idx) => <li key={idx}>{file.name}</li>)}\r\n            </ul>\r\n            <div className=\"actions\">\r\n                <button onClick={() => setFiles(null)}>Cancel</button>\r\n                <button onClick={() => {return (<>{!files && (\r\n                                <div className=\"process\">\r\n                                <h1>Please waitt while we summarize your text</h1>\r\n                                {handleClick}\r\n                                </div>\r\n                                ) && handleClick}\r\n                                </>)} }>Upload</button>\r\n            </div>\r\n        </div>\r\n    )\r\n    else if (files && upload) return (\r\n        <div>{Result() }</div>\r\n        \r\n        )\r\n\r\n    return (\r\n        <>\r\n        {!files &&(\r\n            \r\n\r\n\r\n            <div \r\n                className=\"dropzone\"\r\n                onDragOver={handleDragOver}\r\n                onDrop={handleDrop}\r\n            >\r\n                <h1> Drag and Drop Files to Upload</h1>\r\n                <h1>OR</h1>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange = {(event) => setFiles(event.target.files[0])}\r\n                    hidden\r\n                    ref={inputRef}\r\n                />\r\n            \r\n                <button onClick={() => inputRef.current.click()}>Select Files</button>\r\n            </div>\r\n          )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DragDropFiles;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAClC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMY,QAAQ,GAAGb,MAAM,CAAC,CAAC;EACzB,MAAMc,cAAc,GAAIC,KAAK,IAAI;IAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B,CAAC;EACD,MAAMC,UAAU,GAAIF,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBN,QAAQ,CAACK,KAAK,CAACG,YAAY,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;EACD,MAAMU,WAAW,GAAG,MAAMJ,KAAK,IAAI;IAC/B,aAAAX,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACpBjB,OAAA;QAAAiB,QAAA,EAAI;MAA0D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;IACFV,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAACnB,KAAK,CAAC;IAC7B,IAAI;MACJ,MAAMoB,QAAQ,GAAG,+BAA+B;MAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,EAAC;QAClCG,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MACV,CAAC,CAAC;MACF,IAAII,QAAQ,CAACI,EAAE,EAAC;QAACtB,SAAS,CAACH,KAAK,CAAC;QAAE0B,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAAC,CAAC,MAC5D;QAACD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAAC;IACvC,CAAC,CACD,OAAMC,KAAK,EAAC;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB;EACA,CAAC;EAIL,IAAI5B,KAAK,IAAI,CAACE,MAAM,EAAE,oBAClBP,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBjB,OAAA;MAAAiB,QAAA,EACKiB,KAAK,CAACC,IAAI,CAAC9B,KAAK,CAAC,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAACC,GAAG,kBAAKtC,OAAA;QAAAiB,QAAA,EAAeoB,IAAI,CAACE;MAAI,GAAfD,GAAG;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACLrB,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBjB,OAAA;QAAQwC,OAAO,EAAEA,CAAA,KAAMlC,QAAQ,CAAC,IAAI,CAAE;QAAAW,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDrB,OAAA;QAAQwC,OAAO,EAAEA,CAAA,KAAM;UAAC,oBAAQxC,OAAA,CAAAE,SAAA;YAAAe,QAAA,EAAG,CAACZ,KAAK,iBACzBL,OAAA;cAAKgB,SAAS,EAAC,SAAS;cAAAC,QAAA,gBACxBjB,OAAA;gBAAAiB,QAAA,EAAI;cAAyC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACjDN,WAAW;YAAA;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CACJ,IAAIN;UAAW,gBACd,CAAC;QAAC,CAAG;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,CACT,KACI,IAAIhB,KAAK,IAAIE,MAAM,EAAE,oBACtBP,OAAA;IAAAiB,QAAA,EAAMnB,MAAM,CAAC;EAAC;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;EAI1B,oBACIrB,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACC,CAACZ,KAAK,iBAIHL,OAAA;MACIgB,SAAS,EAAC,UAAU;MACpByB,UAAU,EAAE/B,cAAe;MAC3BgC,MAAM,EAAE7B,UAAW;MAAAI,QAAA,gBAEnBjB,OAAA;QAAAiB,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCrB,OAAA;QAAAiB,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACXrB,OAAA;QACI2C,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAKjC,KAAK,IAAKL,QAAQ,CAACK,KAAK,CAACkC,MAAM,CAACxC,KAAK,CAAC,CAAC,CAAC,CAAE;QACvDyC,MAAM;QACNC,GAAG,EAAEtC;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eAEFrB,OAAA;QAAQwC,OAAO,EAAEA,CAAA,KAAM/B,QAAQ,CAACuC,OAAO,CAACC,KAAK,CAAC,CAAE;QAAAhC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EACN,gBACD,CAAC;AAEX,CAAC;AAACjB,EAAA,CAjFID,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AAmFnB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}