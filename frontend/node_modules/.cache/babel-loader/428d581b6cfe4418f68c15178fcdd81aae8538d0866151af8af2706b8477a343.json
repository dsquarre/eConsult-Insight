{"ast":null,"code":"var _jsxFileName = \"/home/robo/eConsult-Insight/frontend/src/GetLink.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport './App.css';\nimport DashBoard from \"./dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetFile = () => {\n  _s();\n  const [file, setFile] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [result, setresult] = useState(null);\n  const [error, setError] = useState(null);\n  const inputRef = useRef();\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setFile(event.dataTransfer.files[0]);\n  };\n  const handleClick = async event => {\n    event.preventDefault();\n    if (!file) {\n      setError(\"Please enter a valid file.\");\n      return;\n    }\n    setError(null);\n    setIsProcessing(true);\n    setresult(null);\n    console.log(\"Submitting file for analysis:\", file);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const endpoint = \"http://0.0.0.0:8000/upload/\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"File submitted successfully. Awaiting processing.\");\n      } else {\n        const errorText = await response.text();\n        throw new Error(`Server failed to process file: ${errorText}`);\n      }\n    } catch (err) {\n      console.error(\"Submission error:\", err);\n      setError(`Failed to submit file. Please check your network. (${err.message})`);\n      setIsProcessing(false); // Stop processing state on failure\n    }\n  };\n  useEffect(() => {\n    if (isProcessing) {\n      const fetchProcessedResult = async () => {\n        try {\n          const response = await fetch('http://0.0.0.0:8000/result/');\n          if (!response.ok) {\n            throw new Error(`Failed to fetch processed result: ${response.statusText}`);\n          }\n          const result = await response.json();\n\n          // 'result' is a JSON file like: \n          // {wordcount:{word:count}, sentiment:{+:val, -:val, 0:val}, important_rare:[comment1,...]}\n          setresult(result);\n          setIsProcessing(false);\n          console.log(\"Structured data fetched:\", result);\n        } catch (err) {\n          console.error('Error fetching structured data:', err);\n          setError(`Error retrieving result. Expected JSON data but received an error: ${err.message}`);\n          setIsProcessing(false);\n        }\n      };\n      fetchProcessedResult();\n    }\n  }, [isProcessing]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsProcessing(false);\n          setError(null);\n          setFile('');\n        },\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n  if (isProcessing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please wait while we process your comments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n  if (result) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DashBoard, {\n        obj: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n  if (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploads\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFile(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropzone\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Drag and Drop Files to Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => setFile(event.target.files[0]),\n      hidden: true,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => inputRef.current.click(),\n      children: \"Select Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(GetFile, \"lhFw/1K+b9XG6gOmOWj56sYvLJI=\");\n_c = GetFile;\nexport default GetFile;\nvar _c;\n$RefreshReg$(_c, \"GetFile\");","map":{"version":3,"names":["useRef","useState","useEffect","DashBoard","jsxDEV","_jsxDEV","GetFile","_s","file","setFile","isProcessing","setIsProcessing","result","setresult","error","setError","inputRef","handleDragOver","event","preventDefault","handleDrop","dataTransfer","files","handleClick","console","log","formData","FormData","append","endpoint","response","fetch","method","body","ok","errorText","text","Error","err","message","fetchProcessedResult","statusText","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","obj","name","onDragOver","onDrop","type","onChange","target","hidden","ref","current","click","_c","$RefreshReg$"],"sources":["/home/robo/eConsult-Insight/frontend/src/GetLink.js"],"sourcesContent":["import { useRef,useState, useEffect } from \"react\";\r\nimport './App.css'\r\nimport DashBoard from \"./dashboard\";\r\n\r\n\r\nconst GetFile = () => {\r\n    const [file, setFile] = useState('');\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [result, setresult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const inputRef = useRef();\r\n    const handleDragOver = (event) =>{\r\n        event.preventDefault();\r\n    };\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        setFile(event.dataTransfer.files[0])\r\n    };\r\n    const handleClick = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (!file) {\r\n            setError(\"Please enter a valid file.\");\r\n            return;\r\n        }\r\n\r\n        setError(null);\r\n        setIsProcessing(true); \r\n        setresult(null); \r\n        \r\n        console.log(\"Submitting file for analysis:\", file);\r\n        \r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const endpoint = \"http://0.0.0.0:8000/upload/\";\r\n            const response = await fetch(endpoint, {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(\"File submitted successfully. Awaiting processing.\");\r\n            } else {\r\n                const errorText = await response.text();\r\n                throw new Error(`Server failed to process file: ${errorText}`);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Submission error:\", err);\r\n            setError(`Failed to submit file. Please check your network. (${err.message})`);\r\n            setIsProcessing(false); // Stop processing state on failure\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isProcessing) {\r\n            const fetchProcessedResult = async () => {\r\n                try {\r\n                    const response = await fetch('http://0.0.0.0:8000/result/');\r\n                    \r\n                    if (!response.ok) {\r\n                         throw new Error(`Failed to fetch processed result: ${response.statusText}`);\r\n                    }\r\n                    \r\n                    const result = await response.json(); \r\n                    \r\n                    // 'result' is a JSON file like: \r\n                    // {wordcount:{word:count}, sentiment:{+:val, -:val, 0:val}, important_rare:[comment1,...]}\r\n                    setresult(result); \r\n                    setIsProcessing(false); \r\n                    console.log(\"Structured data fetched:\", result);\r\n\r\n                } catch (err) {\r\n                    console.error('Error fetching structured data:', err);\r\n                    setError(`Error retrieving result. Expected JSON data but received an error: ${err.message}`);\r\n                    setIsProcessing(false);\r\n                }\r\n            };\r\n            \r\n            fetchProcessedResult();\r\n        }\r\n    }, [isProcessing]);\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-message\">\r\n                <h1>Error</h1>\r\n                <p>{error}</p>\r\n                <button onClick={() => { setIsProcessing(false); setError(null); setFile(''); }}>Try Again</button>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    if (isProcessing) {\r\n        return (\r\n            <div className=\"processing\">\r\n                <h1>Please wait while we process your comments...</h1>\r\n                <div className=\"spinner\" /> \r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (result) {\r\n        return (\r\n            <div>\r\n                <DashBoard obj={result} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (file){\r\n        return (\r\n        <div className=\"uploads\">\r\n            <p>\r\n                {file.name}\r\n            </p>\r\n            <div className=\"actions\">\r\n                <button onClick={() => setFile(null)}>Cancel</button>\r\n                <button onClick={handleClick }>Upload</button>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n    return (\r\n        <div \r\n                className=\"dropzone\"\r\n                onDragOver={handleDragOver}\r\n                onDrop={handleDrop}\r\n            >\r\n                <h1> Drag and Drop Files to Upload</h1>\r\n                <h1>OR</h1>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange = {(event) => setFile(event.target.files[0])}\r\n                    hidden\r\n                    ref={inputRef}\r\n                />\r\n            \r\n                <button onClick={() => inputRef.current.click()}>Select Files</button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetFile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}