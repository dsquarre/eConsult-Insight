{"ast":null,"code":"var _jsxFileName = \"/home/robo/meeting/frontend/src/result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pdf = () => {\n  fetch('http://localhost:8000/result/').then(response => {\n    response.blob().then(blob => {\n      let url = window.URL.createObjectURL(blob);\n      let a = document.createElement('a');\n      a.href = url;\n      a.download = \"transcribe.txt\";\n      a.click();\n      a.remove();\n    });\n    //window.location.href = response.url;\n  });\n};\nconst Result = () => {\n  _s();\n  const [text, settext] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          pdf();\n        },\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"CpJ+aDFQa4ocOyN/cDS5MS0XypA=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","pdf","fetch","then","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","remove","Result","_s","text","settext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/robo/meeting/frontend/src/result.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\n\nconst pdf = () => {\n    fetch('http://localhost:8000/result/')\n        .then(response => {\n            response.blob().then(blob => {\n                let url = window.URL.createObjectURL(blob);\n                let a = document.createElement('a');\n                a.href = url;\n                a.download = \"transcribe.txt\";\n                a.click();\n                a.remove();\n            });\n            //window.location.href = response.url;\n    });\n}\n\nconst Result = ()=>{ \n    const[text, settext] = useState(\"\");\nreturn (\n    <div className = \"text\">\n    <h1>{}</h1>\n    <div className='buttons'>\n    <button onClick={()=>{pdf();}}>Download</button>\n    </div>\n    </div>\n    )};\nexport default Result;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACdC,KAAK,CAAC,+BAA+B,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAI;IACdA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACE,IAAI,IAAI;MACzB,IAAIC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC1C,IAAIK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACnCF,CAAC,CAACG,IAAI,GAAGP,GAAG;MACZI,CAAC,CAACI,QAAQ,GAAG,gBAAgB;MAC7BJ,CAAC,CAACK,KAAK,CAAC,CAAC;MACTL,CAAC,CAACM,MAAM,CAAC,CAAC;IACd,CAAC,CAAC;IACF;EACR,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACf,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACvC,oBACIE,OAAA;IAAKqB,SAAS,EAAG,MAAM;IAAAC,QAAA,gBACvBtB,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACX1B,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACxBtB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAI;UAAC1B,GAAG,CAAC,CAAC;QAAC,CAAE;QAAAqB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACL,CAAC;AAACR,EAAA,CATDD,MAAM;AAAAW,EAAA,GAANX,MAAM;AAUZ,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}