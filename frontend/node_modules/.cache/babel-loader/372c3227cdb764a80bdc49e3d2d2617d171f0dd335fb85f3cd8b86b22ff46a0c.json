{"ast":null,"code":"var _jsxFileName = \"/home/robo/meeting/frontend/src/DragDropFiles.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport './App.css';\nimport Result from \"./result\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [data, setData] = useState('');\nfunction text() {\n  _s();\n  useEffect(() => {\n    fetch('http://localhost:8000/result/highlights/').then(response => response.text()).then(text => {\n      setData(text);\n    }).catch(error => {\n      console.error('Error fetching string:', error);\n    });\n  });\n}\n_s(text, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nconst DragDropFiles = () => {\n  _s2();\n  const [files, setFiles] = useState(null);\n  const [upload, setupload] = useState(null);\n  const [result, setresult] = useState(null);\n  const inputRef = useRef();\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setFiles(event.dataTransfer.files[0]);\n  };\n  const handleClick = async event => {\n    event.preventDefault();\n    setupload(files);\n    console.log(\"please wait while we summarize your file\");\n    const formData = new FormData();\n    formData.append(\"file\", files);\n    try {\n      const endpoint = \"http://localhost:8000/upload/\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        setresult(files);\n        console.log(\"file processed\");\n      } else {\n        console.log(\"file not processed\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (files && !upload && !result) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploads\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: files.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFiles(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);else if (files && upload && !result) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"processing\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please wait while we process your files...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);else if (files && result) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Result(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !files && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Drag and Drop Files to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: event => setFiles(event.target.files[0]),\n        hidden: true,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => inputRef.current.click(),\n        children: \"Select Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(DragDropFiles, \"2DY9/M0GvYMtjgsptiGOL4cFtVo=\");\n_c = DragDropFiles;\nexport default DragDropFiles;\nvar _c;\n$RefreshReg$(_c, \"DragDropFiles\");","map":{"version":3,"names":["useRef","useState","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","data","setData","text","_s","useEffect","fetch","then","response","catch","error","console","DragDropFiles","_s2","files","setFiles","upload","setupload","result","setresult","inputRef","handleDragOver","event","preventDefault","handleDrop","dataTransfer","handleClick","log","formData","FormData","append","endpoint","method","body","ok","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragOver","onDrop","type","onChange","target","hidden","ref","current","click","_c","$RefreshReg$"],"sources":["/home/robo/meeting/frontend/src/DragDropFiles.js"],"sourcesContent":["import { useRef, useState} from \"react\";\r\nimport './App.css'\r\nimport Result from \"./result\";\r\nconst [data, setData] = useState('');\r\nfunction text() {\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/result/highlights/') \r\n      .then((response) => response.text()) \r\n      .then((text) => {\r\n        setData(text);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching string:', error);\r\n      });\r\n})\r\n}\r\nconst DragDropFiles = () => {\r\n    const [files, setFiles] = useState(null);\r\n    const [upload, setupload] = useState(null);\r\n    const [result, setresult] = useState(null);\r\n    const inputRef = useRef();\r\n    const handleDragOver = (event) =>{\r\n        event.preventDefault();\r\n    };\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        setFiles(event.dataTransfer.files[0])\r\n    };\r\n    const handleClick = async(event) =>{\r\n        event.preventDefault();\r\n        setupload(files);\r\n        console.log(\"please wait while we summarize your file\");\r\n        const formData = new FormData();\r\n        formData.append(\"file\",files);\r\n        try {\r\n        const endpoint = \"http://localhost:8000/upload/\"\r\n        const response = await fetch(endpoint,{\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n        if (response.ok){setresult(files); console.log(\"file processed\");}\r\n        else {console.log(\"file not processed\");}\r\n        }\r\n        catch(error){\r\n        console.log(error);\r\n        }\r\n        };\r\n    \r\n    \r\n\r\n    if (files && !upload && !result) return (\r\n        <div className=\"uploads\">\r\n            <p>\r\n                {files.name}\r\n            </p>\r\n            <div className=\"actions\">\r\n                <button onClick={() => setFiles(null)}>Cancel</button>\r\n                <button onClick={handleClick }>Upload</button>\r\n            </div>\r\n        </div>\r\n    )\r\n    else if(files && upload && !result) return (\r\n        <div className=\"processing\">\r\n            <h1>Please wait while we process your files...</h1>\r\n        </div>\r\n    )\r\n    else if (files && result) return (\r\n        <div>{\r\n            \r\n            Result(data) }</div>\r\n        \r\n        )\r\n\r\n    return (\r\n        <>\r\n        {!files &&(\r\n            \r\n\r\n\r\n            <div \r\n                className=\"dropzone\"\r\n                onDragOver={handleDragOver}\r\n                onDrop={handleDrop}\r\n            >\r\n                <h1> Drag and Drop Files to Upload</h1>\r\n                <h1>OR</h1>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange = {(event) => setFiles(event.target.files[0])}\r\n                    hidden\r\n                    ref={inputRef}\r\n                />\r\n            \r\n                <button onClick={() => inputRef.current.click()}>Select Files</button>\r\n            </div>\r\n          )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DragDropFiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}